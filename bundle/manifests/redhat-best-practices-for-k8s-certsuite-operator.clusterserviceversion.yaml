apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "cnf-certifications.redhat.com/v1alpha1",
          "kind": "CnfCertificationSuiteRun",
          "metadata": {
            "labels": {
              "app.kubernetes.io/created-by": "certsuite-operator",
              "app.kubernetes.io/instance": "cnfcertificationsuiterun-sample",
              "app.kubernetes.io/managed-by": "kustomize",
              "app.kubernetes.io/name": "cnfcertificationsuiterun",
              "app.kubernetes.io/part-of": "certsuite-operator"
            },
            "name": "cnfcertificationsuiterun-sample",
            "namespace": "certsuite-operator"
          },
          "spec": {
            "configMapName": "certsuite-config",
            "enableDataCollection": false,
            "labelsFilter": "observability",
            "logLevel": "info",
            "preflightSecretName": "certsuite-preflight-dockerconfig",
            "showAllResultsLogs": false,
            "showCompliantResourcesAlways": false,
            "timeout": "2h"
          }
        }
      ]
    capabilities: Basic Install
    console.openshift.io/plugins: '["certsuite-plugin"]'
    createdAt: "2024-08-09T12:07:19Z"
    operators.operatorframework.io/builder: operator-sdk-v1.34.2
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
  name: redhat-best-practices-for-k8s-certsuite-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: CnfCertificationSuiteRun is the Schema for the cnfcertificationsuiteruns
        API
      displayName: Cnf Certification Suite Run
      kind: CnfCertificationSuiteRun
      name: cnfcertificationsuiteruns.cnf-certifications.redhat.com
      version: v1alpha1
  description: Deploys Red Hat's Best Practices for Kubernetes Certification Suite
    Pod to run the Certification Test Suite on target resources.
  displayName: Red Hat's Best Practices for Kubernetes Certification Suite Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - nonResourceURLs:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - '*'
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: certsuite-cluster-access
      - rules:
        - apiGroups:
          - console.openshift.io
          resources:
          - consoleplugins
          verbs:
          - create
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: certsuite-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: certsuite-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: certsuite-operator
          control-plane: controller-manager
        name: certsuite-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: SIDECAR_APP_IMG
                  value: quay.io/redhat-best-practices-for-k8s/certsuite-operator-sidecar:v0.0.1
                - name: CONTROLLER_NS
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: quay.io/redhat-best-practices-for-k8s/certsuite-operator:v0.0.1
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: certsuite-controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: webhook-server-cert
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - configMaps
          - namespaces
          - services
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - configMaps
          - secrets
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
        - apiGroups:
          - cnf-certifications.redhat.com
          resources:
          - cnfcertificationsuiteruns
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - cnf-certifications.redhat.com
          resources:
          - cnfcertificationsuiteruns/finalizers
          verbs:
          - update
        - apiGroups:
          - cnf-certifications.redhat.com
          resources:
          - cnfcertificationsuiteruns/status
          verbs:
          - get
          - patch
          - update
        serviceAccountName: certsuite-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - cnf
  - certification
  - cloud
  - telco
  links:
  - name: Red Hat's Best Practices for Kubernetes Certification Suite Operator
    url: https://github.com/redhat-best-practices-for-k8s/certsuite-operator
  maturity: alpha
  provider:
    name: Red Hat
  version: 0.0.1
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: certsuite-controller-manager
    failurePolicy: Fail
    generateName: vcnfcertificationsuiterun.kb.io
    rules:
    - apiGroups:
      - cnf-certifications.redhat.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - cnfcertificationsuiteruns
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-cnf-certifications-redhat-com-v1alpha1-cnfcertificationsuiterun
